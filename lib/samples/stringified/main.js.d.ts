declare const main_js = "\nconst packages = __VAR_JSON__.dependencies\nconst oldLoad = requirejs.load\nrequirejs.load = function (context, id, url) {\n  if (id in packages) {\n    url = packages[id]\n  }\n  return oldLoad.call(requirejs, context, id, url)\n}\n\nif (top !== self) {\n  if (!top._finished) {\n    top.LOADING.init()\n    const typescriptVersion = top.monaco.languages.typescript.typescriptVersion\n    console.log(`[<span style=\"color:blue;\">Typescript Version:${typescriptVersion}</span>]`)\n   // console.log('--- wait for types fetching... ---')\n    const info = m => `<span style=\"background:lightskyblue\">${m}</span>`\n    const types = __VAR_JSON__.types\n    const names = Object.keys(types)\n    const count = names.length\n    let index = 0\n    Promise.all(names.map(name => top.api_addModuleDeclaration(types[name], name.startsWith('global:') ? null : name)\n      .then(() =>{})))\n       // console.log(`type(${++index}/${count}): ${info(`[${name}]`)} fetched`))))\n      .then(() => {\n       // console.log(`--- types fetching finished. ---`)\n        top.LOADING.destroy()\n      })\n    top._finished = true\n  }\n}\n\n\nconsole.log(new Date().toLocaleString())\n";
export default main_js;
