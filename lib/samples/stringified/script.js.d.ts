declare const script_js = "\nconst THEME_NAME = '__EDITOR_EDITOR_THEME__'\nconst themer = top.document.querySelector('.ToolBar select')\nconst hasTheme = theme => top.api_editor._themeService._knownThemes.has(theme)\nconst base = 'https://unpkg.com/monaco-themes@0.3.3/themes/'\nif (themer.children.length === 3) {\n  fetch(`${base}themelist.json`).then(res => res.json()).then(themes => {\n    const current = localStorage.getItem(THEME_NAME)\n    const setTheme = themeName => {\n      if (hasTheme(themeName)) {\n        top.monaco.editor.setTheme(themeName)\n        localStorage.setItem(THEME_NAME, themeName)\n      } else {\n        const themeFile = themes[themeName]\n        if (themeFile) {\n          fetch(`${base}${themeFile}.json`)\n            .then(res => res.json())\n            .then(themeData => {\n              if (themeData.base === 'vs') {\n                top.document.body.style.backgroundColor = 'white'\n              }\n              if (themeData.base === 'vs-dark') {\n                top.document.body.style.backgroundColor = 'black'\n              }\n              top.monaco.editor.defineTheme(themeName, themeData)\n              top.monaco.editor.setTheme(themeName)\n              localStorage.setItem(THEME_NAME, themeName)\n            })\n        }\n      }\n    }\n    setTheme(current)\n    if (themer.children.length === 3) {\n      const last = current ? `<option value=\"${current}\">${current}</option>` : ''\n      const themeOps = Object.keys(themes)\n        .reduce((acc, theme) => theme === current ? acc : acc +=\n          `<option value=\"${theme}\">${theme}</option>`, last)\n      themer.innerHTML = themeOps + themer.innerHTML\n      themer.oninput = () => setTheme(themer.value)\n    }\n  })\n}\n  ";
export default script_js;
